# ########## EXAMPLE CLOUD TAG CONTROL FILE #########
#----------------------------------------------------
# define the arts cloud and additional tags of arts
tgsDefine{
      [ 
	"H2O-MPM93",
	"O2-MPM93",
	"N2-SelfContStandardType",
	"liquidcloud-MPM93",
	"icecloud-MPM93"
      ] 
}
#
#----------------------------------------------------
# initialize the continua tag structures
cont_descriptionInit{}
#
#----------------------------------------------------
#
#
# ----- H2O full models (line+continuum) ------------
#
# MPM93 H2O absorption model (lines + continuum)
cont_descriptionAppend{
    tagname        = "H2O-MPM93"
    model          = "MPM93"
    userparameters = [ ]
}
#
# ----- N2 continuum --------------------------------
#
cont_descriptionAppend{
    tagname        = "N2-SelfContStandardType"
    model          = "Rosenkranz"
    userparameters = [ ]
}
#
# ----- O2 full models (line+continuum) -------------
#
# MPM93 O2 absorption model (lines + continuum)
cont_descriptionAppend{
    tagname        = "O2-MPM93"
    model         = "MPM93Continuum"
    userparameters = [ ]
}
#
# ----- liquid water particle -----------------------
#
# MPM93 model for liquid water particle absorption:
cont_descriptionAppend{
    tagname        = "liquidcloud-MPM93"
    model          = "MPM93"
    userparameters = [ ]
}
# ----- ice water particle --------------------------
# MPM93 model for ice water particle absorption:
cont_descriptionAppend{
    tagname        = "icecloud-MPM93"
    model          = "MPM93"
    userparameters = [ ]
}
#
#----------------------------------------------------
#
# Read the pressure, temperature, and altitude 
# profiles and create the workspace variable `raw_ptz'.
# ATTENTION! THE PATH AND FILE NAMES ARE USER SPECIFIC!
MatrixReadAscii (raw_ptz) 
  {"@ac_arts_data@/atmosphere/fascod/midlatitude-summer.tz.aa"}
#
# ATTENTION! THE PATH AND FILE NAMES ARE USER SPECIFIC!
raw_vmrsReadFromFiles
  {seltags   = ["liquidcloud-MPM93", "icecloud-MPM93"]
   filenames = ["@ac_arts_data@/atmosphere/particles/midlatitude-summer.cumulonimbus.MPM93droplet.aa",
                "@ac_arts_data@/atmosphere/particles/midlatitude-summer.cirrus.MPM93ice.aa"]
   basename  =  "@ac_arts_data@/atmosphere/fascod/midlatitude-summer"
  }
#
# Create the pressure grid `p_abs' (just an example)
VectorNLogSpace(p_abs){
        start = 100000.000
        stop  =   1000.000
        n     = 10
}
# Now interpolate all the raw atmospheric input onto the pressure 
# grid and create the atmospheric variables `t_abs',`z_abs',`vmrs'
AtmFromRaw{}
#
# set the H2O VMR in clouds to saturation level 
# (must be called after AtmFromRaw)
WaterVaporSaturationInClouds{}
#
#----------------------------------------------------
#
# Set the physical H2O profile from the H2O profile in vmrs:
h2o_absSet{}
#
# Set the physical N2 profile from the N2 profile in vmrs:
n2_absSet{}
#
#----------------------------------------------------
#
# Read spectral line data from HITRAN96 catalogue for 
# the frequency range from 1 to 2 GHz.
# This in not essential for the continuum tags but 
# bust be given as input for absCalc below.
# ATTENTION! THE PATH AND FILE NAMES ARE USER SPECIFIC!
#
lines_per_tgReadFromCatalogues{
  filenames = [ "@ac_arts_data@/spectroscopy/hitran96/hitran96_lowfreq.par" ]
  formats   = [ "HITRAN96" ]
  fmin      = [ 1.0e9 ]
  fmax      = [ 2.0e9 ]
}
#
# Create an example frequency grid `f_mono'
VectorNLinSpace(f_mono){
        start =    100.0e9
        stop  =    200.0e9
        n     =    100    
}
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#----------------------------------------------------
#
# Set the lineshape function for each continuum tag
lineshape_per_tgDefine{
        shape               = [ "no_shape",
				"no_shape",
				"no_shape",
				"no_shape",
                                "no_shape"]
        normalizationfactor = [ "no_norm", 
                                "no_norm", 
                                "no_norm", 
                                "no_norm", 
                                "no_norm"]
        cutoff              = [ -1,
                                -1,
                                -1,
                                -1,
                                -1]
}
#
#----------------------------------------------------
#
# calculate the absorption coefficients, unit=1/meter
absCalc{}
#
#----------------------------------------------------
#
# These we definitely want to write to files:
# 1. absorption coefficient per continuum tag
ArrayOfMatrixWriteAscii (abs_per_tg) {""}
# 2. temperature profile
VectorWriteAscii (t_abs)  {""}
# 3. altitude grid
VectorWriteAscii (z_abs)  {""}
# 4. pressure grid
VectorWriteAscii(p_abs)   {""}
# 5. frequency grid
VectorWriteAscii (f_mono) {""}
# 6. cont_descriptionAppend continuum tagnames
ArrayOfStringWriteAscii (cont_description_names) {""}
# 7. cont_descriptionAppend model selections
ArrayOfStringWriteAscii (cont_description_models) {""}
# 8. cont_descriptionAppend user given input parameters
ArrayOfVectorWriteAscii (cont_description_parameters) {""}
#####################################################
