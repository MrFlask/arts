#DEFINITIONS:  -*-sh-*-
#
# General ARTS defaults
#
# Authors: Stefan Buehler, Patrick Eriksson, Oliver Lemke

Arts2 {


#
# Initialize verbosity levels
#
verbosityInit


#
# Default output format
#
output_file_formatSetAscii


#
# Number of Stokes components to be computed
#
IndexSet( stokes_dim, 1 )


#
# Dimensionality of the atmosphere
#
AtmosphereSet1D


#
# The N2 VMR value is sometimes needed for the calculation of the
# absorption coefficient of other species. The value here is from
# Wallace&Hobbs, 2nd edition.
#
VectorSet( abs_n2, [ 0.7808 ] )


#
# The H2O VMR value is sometimes needed for the calculation of the
# absorption coefficient of other species. We cannot set this to a
# meaningful default value, since it is very variable. Set it to -1
# instead. 
#
VectorSet( abs_h2o, [ -1 ] )


#
# Lineshape function
#
# These should be the most accurate settings:
# Kuntz implementation of the Voigt function, 
# Van-Vleck and Huber normalization factor,
# cutoff at 750 GHz, consistent with Clough and Rosenkranz
#
abs_lineshapeDefine( abs_lineshape, "Voigt_Kuntz6", "VVH", 750e9 )


#
# Default is "on-the-fly" absorption
# Another option is to create an absorption table, which could save
# (considerable) time, especially for batch calculations.
# 
AgendaSet( abs_scalar_gas_agenda ){
  abs_scalar_gasCalcLBL
  # To use the absorption lookup table, replace by:
  #abs_scalar_gasExtractFromLookup
}

#
# Set default interpolation orders for absorption lookup table. Do not
# mess with these values, unless you know what you are doing! 
#
IndexSet( abs_p_interp_order,   5 )
IndexSet( abs_t_interp_order,   7 )
IndexSet( abs_nls_interp_order, 5 )

#
# Definition of Earth surface
# 
# geoid: 
r_geoidSpherical( r_geoid, atmosphere_dim, lat_grid, lon_grid, -1 )


# 
# Winds (all set to be empty, shorthand for no winds)
#
Tensor3SetConstant( wind_u_field, 0, 0, 0, 0.0 )
Tensor3SetConstant( wind_v_field, 0, 0, 0, 0.0 )
Tensor3SetConstant( wind_w_field, 0, 0, 0, 0.0 )


# Surface emissivity
# 
# The default model is a blackbody surface. This is a good choice only
# if your sensor operates at a frequency where the troposphere is
# opaque, but it is the fastest option.
#
# Warning: If you want to do calculations with something other than a
# blackbody surface, you have to re-define the surface_prop_agenda. It
# is not enough to just set e.g. surface_scalar_reflectivity! 
# 
AgendaSet( surface_prop_agenda ){
   Ignore( rte_pos )
   Ignore( rte_los )
   InterpAtmFieldToRteGps( surface_skin_t, atmosphere_dim, 
                            rte_gp_p, rte_gp_lat, rte_gp_lon, t_field )
   surfaceBlackbody
} 


#
# Default is to include emission in source term
# 
AgendaSet( emission_agenda ){
  emissionPlanck
}


#
# Set opt_prop_gas_agenda
# 
AgendaSet( opt_prop_gas_agenda ){
  ext_matInit
  abs_vecInit
  ext_matAddGas
  abs_vecAddGas
}


#
# Refractive index agenda
# (not used if ppath_stepGeometric used in ppath_step_agenda)
#
AgendaSet( refr_index_agenda ){
  refr_indexThayer
}


#
# Agenda for the calculation of propagation path steps
# (This will result in pure geometrical calculations. That is, refraction is 
# neglected. The value for ppath_lmax of 10e3 is OK for limb sounding, and 
# also for down-looking if not very accutate results are demanded.)
#
NumericSet( ppath_lmax, 10e3 )
AgendaSet( ppath_step_agenda ){
  ppath_stepGeometric
}


#
# Agendas for clearsky radiative transfer calculation
# 
AgendaSet( iy_space_agenda ){
  Ignore( rte_pos )
  Ignore( rte_los )
  MatrixCBR( iy, stokes_dim, f_grid )
}
#
AgendaSet( iy_clearsky_agenda ){
  iyEmissionStandardClearsky
}
AgendaSet( iy_clearsky_basic_agenda ){
  iyEmissionStandardClearskyBasic
}


#
# No unit conversion 
#
StringSet( y_unit, "1" )


#
# No scattering
#
cloudboxOff


#
# No jacobian calculations by default
#
jacobianOff



#
# Batch calculations start at index 0 by default
#
IndexSet( ybatch_start, 0 )


}

